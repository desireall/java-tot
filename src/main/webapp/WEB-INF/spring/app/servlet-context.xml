<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- <annotation-driven conversion-service="conversionService" enable-matrix-variables="true"> 
		<argument-resolvers> <beans:bean class="org.springframework.samples.mvc.data.custom.CustomArgumentResolver"/> 
		</argument-resolvers> <async-support default-timeout="3000"> <callable-interceptors> 
		<beans:bean class="org.springframework.samples.mvc.async.TimeoutCallableProcessingInterceptor" 
		/> </callable-interceptors> </async-support> </annotation-driven> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Only needed because we install custom converters to support the examples 
		in the org.springframewok.samples.mvc.convert package -->
	<!-- <beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"> 
		<beans:property name="formatters"> <beans:bean class="org.springframework.samples.mvc.convert.MaskFormatAnnotationFormatterFactory" 
		/> </beans:property> </beans:bean> -->

	<!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload 
		package -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		 <!-- 支持的其中一个属性，支持的最大文件大小，以字节为单位  文件大小超出 不做处理之后浏览器会出现  ERR_CONNECTION_ABORTED -->
		 <beans:property name="maxUploadSize" value="800000000" />  <!-- 800000000    800M -->
		 <beans:property name="defaultEncoding" value="UTF-8"/>
	</beans:bean>


	<beans:bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="exceptionMappings">
			<beans:props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/views/error_fileupload.jsp页面 -->
				<beans:prop
					key="MaxUploadSizeExceededException">error_fileupload</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="controllers.xml" />
    
	<task:annotation-driven />
	
	
	<!-- 加载properties文件 -->
	<context:property-placeholder location="/WEB-INF/common.properties"/>
	
	<!-- 约定优于配置，约定优于配置 -->
	<mvc:annotation-driven>
	<!-- 可不设置，使用默认的超时时间 -->
	  <mvc:async-support default-timeout="10000"/>
	</mvc:annotation-driven>
	
	<mvc:default-servlet-handler />

</beans:beans>
